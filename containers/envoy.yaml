node:
  id: dummy
  cluster: xyz
  locality:
    zone: nowhere

static_resources:
  listeners:
    - name: listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
      - filters:
        - name: envoy.filters.network.http_connection_manager
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
            stat_prefix: test
            codec_type: AUTO
            generate_request_id: true
            access_log:
              - name: envoy.file_access_log
                filter:
                  not_health_check_filter: {}
                typed_config:
                  '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout
                  log_format:
                    json_format:
                      response_code_details: '%RESPONSE_CODE_DETAILS%'
                      uri: '%REQ(X-ENVOY-ORIGINAL-PATH?:PATH):2048%'
                      status: '%RESPONSE_CODE%'
                      grpc_status: '%GRPC_STATUS%'
                      cluster: '%UPSTREAM_CLUSTER%'
                      flags: '%RESPONSE_FLAGS%'
                      route: '%ROUTE_NAME%'
            local_reply_config:
              mappers:
                - filter:
                    response_flag_filter:
                      flags: []
                  body_format_override:
                    json_format:
                      message: "%LOCAL_REPLY_BODY%"
                      grpc_status: "%GRPC_STATUS%"
            route_config:
              name: example
              virtual_hosts:
              - name: blanket_response
                domains: 
                - '*'
                routes:
                  - name: catchall
                    match: 
                      prefix: /
                    route: 
                      prefix_rewrite: /
                      cluster: httpbin
                rate_limits:
                  - actions:
                      - remote_address: {}
                  - actions:
                      - header_value_match:
                          descriptor_key: protect_the_headers_api
                          descriptor_value: "1"
                          headers:
                            - name: :path
                              string_match:
                                prefix: /headers
                                ignore_case: True
                            - name: :method
                              string_match:
                                exact: GET
                                ignore_case: True
                  - actions:
                      - header_value_match:
                          descriptor_key: disallow_spammy_GETs
                          descriptor_value: "1"
                          headers:
                            - name: :method
                              string_match: 
                                exact: GET
                                ignore_case: True
            http_filters:
              - name: envoy.filters.http.ratelimit
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
                  domain: default
                  request_type: both # can be 'external|internal'
                  failure_mode_deny: false
                  rate_limit_service:
                    grpc_service:
                      envoy_grpc:
                        cluster_name: rls
                    transport_api_version: V3
                  enable_x_ratelimit_headers: DRAFT_VERSION_03
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: rls
      connect_timeout: 0.010s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      http2_protocol_options: {}
      load_assignment:
        cluster_name: rls
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: server
                      port_value: 5001
    - name: httpbin
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: httpbin
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: httpbin
                      port_value: 80

admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
